{"version":3,"sources":["sample-restaurants.js","components/Landing.js","components/Header.js","components/AddBurgerForm.js","components/EditBurgerForm.js","components/MenuAdmin.js","components/Shipment.js","components/Order.js","sample-burgers.js","components/Burger.js","base.js","components/Auth/Login.js","components/Auth/SignIn.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["restaurants","title","url","id","Landing","props","useState","display","toggleDisplay","setTitle","setUrl","className","onClick","map","restaurant","getTitle","key","history","push","Header","AddBurgerForm","nameRef","React","createRef","priceRef","statusRef","descRef","imageRef","createBurger","event","preventDefault","burger","name","current","value","price","parseFloat","status","desc","image","addBurger","currentTarget","reset","onSubmit","this","ref","type","placeholder","autoComplete","Component","EditBurgerForm","handleChange","updateBurger","index","onChange","deleteBurger","MenuAdmin","state","photo","user","authHandler","authData","a","email","photoURL","setState","firebase","auth","onAuthStateChanged","avatar","src","alt","handleLogout","Object","keys","burgers","loadSampleBurgers","Shipment","total","shipping","shippinNeon","Order","renderOrder","count","order","isAvailable","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","deleteFromOrder","orderIds","reduce","prevTotal","sampleBurgers","burger1","burger2","burger3","burger4","burger5","burger6","burger7","burger8","burger9","Burger","details","disabled","addToOrder","firebaseApp","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Login","authenticate","SignIn","authProvider","signInWithPopup","then","children","App","Date","now","signOut","window","location","reload","params","match","localStorageRef","localStorage","getItem","restaurantId","JSON","parse","syncState","context","setItem","stringify","removeBinding","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.843af1ab.chunk.js","sourcesContent":["// Наши рестораны\nconst restaurants = [\n  {\n    title: 'Hot Burger Тверская',\n    url: 'hot-burger-tverskaya',\n    id: 1\n  },\n\n  {\n    title: 'Hot Burger Маросейка',\n    url: 'hot-burger-maroseyka',\n    id: 2\n  },\n  {\n    title: 'Hot Burger Петровка',\n    url: 'hot-burger-petrovka',\n    id: 3\n  }\n];\n\nexport default restaurants;\n","import React from \"react\";\r\nimport restaurants from \"../sample-restaurants\";\r\nimport propTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n\r\nconst Landing = (props) => {\r\n\r\nconst [display,toggleDisplay] = useState(false);\r\nconst [title,setTitle] = useState('');\r\nconst [url,setUrl] = useState('')\r\n\r\nconst displayList = () => {\r\n  toggleDisplay(!display)\r\n};\r\nconst getTitle = (restaurant) => {\r\n  const { title, url } = restaurant;\r\n  setTitle(title);\r\n  setUrl(url);\r\n  toggleDisplay(false)\r\n};\r\nconst goToRestaurant = () => {\r\n  props.history.push(`/restaurant/${url}`);\r\n};\r\nreturn (\r\n  <div className=\"restaurant_select\">\r\n    <div className=\"restaurant_select_top\">\r\n      <div\r\n        onClick={displayList}\r\n        className=\"restaurant_select_top-header font-effect-outline\"\r\n      >\r\n        {title ? title : \"Выбери ресторан\"}\r\n      </div>\r\n      <div className=\"arrow_picker\">\r\n        <div className=\"arrow_picker-up\"></div>\r\n        <div className=\"arrow_pecker-down\"></div>\r\n      </div>\r\n    </div>\r\n    {display ? (\r\n      <div className=\"restaurant_select_bottom\">\r\n        <ul>\r\n          {restaurants.map((restaurant) => {\r\n            return (\r\n              <li onClick={() => getTitle(restaurant)} key={restaurant.id}>\r\n                {restaurant.title}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    ) : null}\r\n    {title && !display ? (\r\n      <button onClick={goToRestaurant}>Перейти в ресторан</button>\r\n    ) : null}\r\n  </div>\r\n);\r\n    };\r\n\r\nLanding.propTypes = {\r\n  history: propTypes.object,\r\n};\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst Header = (props) => (\r\n  <header className=\"top\">\r\n    <div className=\"wrap\">\r\n      <div className=\"header-content\">\r\n        <div className=\"header-rating\">\r\n          <div className=\"header-rating-tag\"> Рейтинг: </div>\r\n          <div className=\"header-rating-icon\"> ★★★★★ </div>\r\n        </div>\r\n        <div className=\"header-divider\"></div>\r\n        <h1 className=\"font-effect-fire-animation\">{props.title}</h1>\r\n        <h3>\r\n          <span>Быстроя доставка</span>\r\n          <span className=\"sub-header\">#бургеров</span>\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  </header>\r\n);\r\nHeader.propTypes = {\r\n  title:propTypes.string.isRequired\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nclass AddBurgerForm extends React.Component {\r\n  static propTypes = {\r\n    addBurger: propTypes.func\r\n  };\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  createBurger = (event) => {\r\n    event.preventDefault();\r\n    const burger = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value || 0 ),\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value,\r\n    };\r\n    this.props.addBurger(burger);\r\n    event.currentTarget.reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"burger-edit\" onSubmit={this.createBurger}>\r\n        <input\r\n          ref={this.nameRef}\r\n          name=\"name\"\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <input\r\n          ref={this.priceRef}\r\n          name=\"price\"\r\n          type=\"text\"\r\n          placeholder=\"Price\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <select ref={this.statusRef} name=\"status\" className=\"status\">\r\n          <option value=\"avalible\">Доступно</option>\r\n          <option value=\"anavalible\">Убрать из меню</option>\r\n        </select>\r\n        <textarea ref={this.descRef} name=\"desc\" placeholder=\"Desc\" />\r\n        <input\r\n          ref={this.imageRef}\r\n          name=\"image\"\r\n          type=\"text\"\r\n          placeholder=\"Image\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <button type=\"submit\">+ Добавить в Меню</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default AddBurgerForm;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nclass EditBurgerForm extends React.Component {\r\n  static propTypes = {\r\n    burger: propTypes.shape({\r\n      image: propTypes.string,\r\n      name: propTypes.string,\r\n      price: propTypes.number,\r\n      desc: propTypes.string,\r\n      status: propTypes.string\r\n    }),\r\n    index: propTypes.string,\r\n    updateBurger: propTypes.func,\r\n    deleteBurger: propTypes.func\r\n  };\r\n  handleChange = (event) => {\r\n    const updateBurger = {\r\n      ...this.props.burger,\r\n      [event.currentTarget.name]: event.currentTarget.name === 'price' ?\r\n      parseFloat(event.currentTarget.value) || 0 : event.currentTarget.value \r\n    };\r\n    this.props.updateBurger(this.props.index, updateBurger);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"burger-edit\">\r\n        <input\r\n          onChange={this.handleChange}\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={this.props.burger.name}\r\n        />\r\n        <input\r\n          onChange={this.handleChange}\r\n          name=\"price\"\r\n          type=\"text\"\r\n          value={this.props.burger.price}\r\n        />\r\n        <select\r\n          onChange={this.handleChange}\r\n          name=\"status\"\r\n          className=\"status\"\r\n          value={this.props.burger.status}\r\n        >\r\n          <option value=\"available\">Доступно!</option>\r\n          <option value=\"unavailable\">Не доступно!</option>\r\n        </select>\r\n        <textarea\r\n          onChange={this.handleChange}\r\n          name=\"desc\"\r\n          value={this.props.burger.desc}\r\n        />\r\n        <input\r\n          onChange={this.handleChange}\r\n          name=\"image\"\r\n          type=\"text\"\r\n          value={this.props.burger.image}\r\n        />\r\n        <button onClick={() => this.props.deleteBurger(this.props.index)}>\r\n          Удалить из меню\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EditBurgerForm;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport AddBurgerForm from \"./AddBurgerForm\";\r\nimport EditBurgerForm from \"./EditBurgerForm\";\r\nimport firebase from \"firebase/app\";\r\n\r\nclass MenuAdmin extends React.Component {\r\n  state = {\r\n    photo: '',\r\n    user: ''\r\n  }\r\n  static propTypes = {\r\n    burgers: propTypes.object,\r\n    deleteBurger: propTypes.func,\r\n    updateBurger: propTypes.func,\r\n    addBurger: propTypes.func,\r\n    loadSampleBurgers: propTypes.func\r\n  };\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n        if(user) {\r\n            this.authHandler({user})\r\n        }\r\n    })\r\n}\r\nauthHandler = async (authData) => {\r\n  const {email,photoURL} = authData.user;\r\n  this.setState({user: email, photo: photoURL});\r\n};\r\n  render() {\r\n    const {user,photo} = this.state;\r\n    const avatar = photo ? photo : '/images/avatar.png';\r\n    return (\r\n      <div className=\"menu-admin\">\r\n        { user ? (\r\n        <div className=\"login-header\">\r\n          <div className=\"avatar\">\r\n            <img src={avatar} alt={user}/>\r\n          </div>\r\n          <button className=\"buttonLogout\" onClick={this.props.handleLogout}>Выйти</button>\r\n        </div> ) : null}\r\n        <h2>Управление Меню</h2>\r\n        {Object.keys(this.props.burgers).map((key) => {\r\n          return (\r\n            <EditBurgerForm\r\n              key={key}\r\n              index={key}\r\n              deleteBurger={this.props.deleteBurger}\r\n              burger={this.props.burgers[key]}\r\n              updateBurger={this.props.updateBurger}\r\n            />\r\n          );\r\n        })}\r\n        <AddBurgerForm addBurger={this.props.addBurger} />\r\n        <button onClick={this.props.loadSampleBurgers}>\r\n          Загрузить Бургеры\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MenuAdmin;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nclass Shipment extends React.Component {\r\n  static propTypes = {\r\n    total: propTypes.number\r\n  };\r\n  render() {\r\n    const { total } = this.props;\r\n    const shipping = total > 0 && total < 500 ? 350 : 99;\r\n    const shippinNeon =\r\n      shipping === 99 ? (\r\n        <span className=\" font-effect-neon total_wrap-chep\">{shipping} ₽</span>\r\n      ) : (\r\n        <span>{shipping} ₽</span>\r\n      );\r\n    return (\r\n      <div className=\"total\">\r\n        <div className=\"total_wrap\">\r\n            <div>\r\n                <div>Доставка: {total > 0 ? shippinNeon : null}</div>\r\n                <div className=\"total_wrap-free\">\r\n                    {total < 500 ? `Закажите ещё на ${500 - total} ₽ для доставки за 99 ₽` : null }\r\n                </div>\r\n            </div>\r\n          <div className=\"total_wrap-final\">Итого: {total} ₽</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shipment;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport Shipment from \"./Shipment\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nclass Order extends React.Component {\r\n  static propTypes = {\r\n    burgers: propTypes.object,\r\n    order: propTypes.object,\r\n    deleteFromOrder: propTypes.func\r\n  };\r\n  renderOrder = (key) => {\r\n    const burger = this.props.burgers[key];\r\n    const count = this.props.order[key];\r\n    const isAvailable = burger && burger.status === \"available\";\r\n    const transitionOptions = {\r\n      classNames: \"order\",\r\n      key,\r\n      timeout: { enter: 500, exit: 500 }\r\n    }\r\n    if (!burger) return null;\r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition\r\n        {...transitionOptions}\r\n        >\r\n          <li className=\"unavailible\" key={key}>\r\n            Извините,{burger ? burger.name : \"burger\"} временно недоступен\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <CSSTransition\r\n      {...transitionOptions}\r\n      >\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component=\"span\" className=\"count\">\r\n              <CSSTransition\r\n                classNames=\"count\"\r\n                key={count}\r\n                timeout={{ enter: 500, exit: 500 }}\r\n              >\r\n                <span>{count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            шт. {burger.name}\r\n            <span> {count * burger.price} ₽ </span>\r\n            <button\r\n              onClick={() => this.props.deleteFromOrder(key)}\r\n              className=\"cansellItem\"\r\n            >\r\n              &times;\r\n            </button>\r\n          </span>\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      const burger = this.props.burgers[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = burger && burger.status === \"available\";\r\n      if (isAvailable) {\r\n        return prevTotal + burger.price * count;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Ваш Заказ</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        {total > 0 ? (\r\n          <Shipment total={total} />\r\n        ) : (\r\n          <div className=\"nothingSelected\">\r\n            Выберите блюда и добавьте к заказу\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Order;\r\n","// Наше меню\nconst sampleBurgers = {\n  burger1: {\n    name: 'Чизбургер',\n    image: '/images/cheese.jpg',\n    desc:\n      'Классический бургер с бифштексом из 100% говядины с маринованными огурчиками и свежей пшеничной булочкой.',\n    price: 110,\n    status: 'available'\n  },\n\n  burger2: {\n    name: 'Чикенбургер',\n    image: '/images/chicken.jpg',\n    desc:\n      'Куриный бургер с добавлением расплавленного сыра, соуса Барбекю и листового салата.',\n    price: 140,\n    status: 'available'\n  },\n\n  burger3: {\n    name: 'Двойной Гамбургер',\n    image: '/images/double.jpg',\n    desc:\n      'Двойной гамбургер с бифштексом из 100% говядины и расплавленным сыром Чеддер и пряным соусом.',\n    price: 200,\n    status: 'unavailable'\n  },\n\n  burger4: {\n    name: 'Фишбургер',\n    image: '/images/fish.jpg',\n    desc:\n      'Рыбное филе высшего качества c листовым салатом, маринованными огурчиками и преправленное легким майонезом.',\n    price: 150,\n    status: 'available'\n  },\n\n  burger5: {\n    name: 'Картофель Фри',\n    image: '/images/fries.jpg',\n    desc:\n      'Хрустящие ломтики золотистого горячего картофеля Супер Фри, сделанные из отборного органического корнеплода!',\n    price: 85,\n    status: 'available'\n  },\n\n  burger6: {\n    name: 'King Бургер',\n    image: '/images/ham.jpg',\n    desc:\n      'Бургер из 100% отборной говядины, с жаренными ломтиками бекона и свежим расплавленным сыром, заправленный кетчупом и майонезом.',\n    price: 450,\n    status: 'available'\n  },\n\n  burger7: {\n    name: 'Мега Бургер',\n    image: '/images/mega.jpg',\n    desc:\n      'Наш самый большой бургер, сделанный из свежайшего бифштекса, с добавлением расплавленного сыра Чеддер и соленых огурчиков.',\n    price: 500,\n    status: 'available'\n  },\n\n  burger8: {\n    name: 'Бургер в Пите',\n    image: '/images/pita.jpg',\n    desc:\n      'Четыре котлеты из 100% говядины, покрытые плавленным сыром Чеддер, со свежим листовым салатом в свежей пшеничной лепешке.',\n    price: 380,\n    status: 'available'\n  },\n\n  burger9: {\n    name: 'Village Фри',\n    image: '/images/bakedFries.jpg',\n    desc:\n      'Порция свежих ломтиков картофеля, запеченых на открытом воздухе под мирно тлеющими углями',\n    price: 90,\n    status: 'available'\n  }\n};\n\nexport default sampleBurgers;\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nclass Burger extends React.Component {\r\n  static propTypes = {\r\n    details: propTypes.shape({\r\n      image: propTypes.string,\r\n      name: propTypes.string,\r\n      price: propTypes.number,\r\n      desc: propTypes.string,\r\n      status: propTypes.string\r\n    }),\r\n    index:propTypes.string,\r\n    addToOrder:propTypes.func\r\n  };\r\n  render() {\r\n    const { image, name, price, desc, status } = this.props.details;\r\n    const isAvailable = status === \"available\";\r\n    return (\r\n      <li className=\"menu-burger\">\r\n        <div className=\"image-container\">\r\n          <img src={image} alt={name} />\r\n        </div>\r\n        <div className=\"burger-details\">\r\n          <h3 className=\"burger-name\">\r\n            {name}\r\n            <span className=\"price\">{price} ₽ </span>{\" \"}\r\n          </h3>\r\n          <p>{desc}</p>\r\n          <button\r\n            className=\"buttonOrder\"\r\n            disabled={!isAvailable}\r\n            onClick={() => this.props.addToOrder(this.props.index)}\r\n          >\r\n            {isAvailable ? \"Заказать\" : \"Временно нет\"}\r\n          </button>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nexport default Burger;\r\n","import Rebase from \"re-base\";\r\nimport firebase from \"firebase/app\";\r\nimport 'firebase/database';\r\nimport 'firebase/auth';\r\n\r\n//создали базу данных.указал все свойства для связи с базой данных firebase\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyAIl84324du8blrXayE_je0bitgNC2escY\",\r\n    authDomain: \"very-hot-burgers-47ba0.firebaseapp.com\",\r\n    databaseURL: \"https://very-hot-burgers-47ba0-default-rtdb.firebaseio.com\",\r\n});\r\n\r\n//создал необходимую связку с реактом\r\nconst base = Rebase.createClass(firebaseApp.database()); \r\n\r\nexport {firebaseApp};\r\nexport default base;","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst Login = (props) => {\r\n  return (\r\n    <div className=\"login-container\">\r\n      <nav className=\"login\">\r\n        <h2>Авторизация</h2>\r\n        <p>Введите логин и пароль вашего аккаунта GitHub</p>\r\n        <button className=\"github\" onClick={() => props.authenticate()}>\r\n          Войти\r\n        </button>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\nLogin.propTypes = {\r\n  authenticate: propTypes.func.isRequired,\r\n};\r\nexport default Login;\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport firebase from \"firebase/app\";\r\nimport { firebaseApp } from \"../../base\";\r\n\r\nclass SignIn extends React.Component {\r\n  state = {\r\n    user: \"\",\r\n  };\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.authHandler({ user });\r\n      }\r\n    });\r\n  }\r\n  authHandler = async (authData) => {\r\n    const { email } = authData.user;\r\n    this.setState({ user: email });\r\n  };\r\n  authenticate = () => {\r\n    const authProvider = new firebase.auth[\"GithubAuthProvider\"]();\r\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n  };\r\n  render() {\r\n    if (!this.state.user) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport Header from \"./Header\";\r\nimport MenuAdmin from \"./MenuAdmin\";\r\nimport Order from \"./Order\";\r\nimport sampleBurgers from \"../sample-burgers\";\r\nimport Burger from \"./Burger\";\r\nimport base from \"../base\";\r\nimport firebase from \"firebase/app\";\r\nimport SignIn from \"./Auth/SignIn\";\r\n\r\nclass App extends React.Component {\r\n  static propTypes = {\r\n    match: propTypes.object,\r\n  };\r\n  state = {\r\n    burgers: {},\r\n    order: {},\r\n  };\r\n  //этот ref требуется для получения ссылки на нужный обьект внутри базы данных\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    const localStorageRef = localStorage.getItem(params.restaurantId); //метод чтобы получить данные из localStorage\r\n    if (localStorageRef) {\r\n      this.setState({ order: JSON.parse(localStorageRef) });\r\n    }\r\n    this.ref = base.syncState(`${params.restaurantId}/burgers`, {\r\n      context: this,\r\n      state: \"burgers\",\r\n    });\r\n  }\r\n  componentDidUpdate() {\r\n    const { params } = this.props.match;\r\n    localStorage.setItem(params.restaurantId, JSON.stringify(this.state.order));\r\n  }\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n  addBurger = (burger) => {\r\n    //1.Делаем копию объекта state\r\n    const burgers = { ...this.state.burgers };\r\n    //2.Добавить новый бургер в переменную burgers\r\n    burgers[`burger${Date.now()}`] = burger;\r\n    //3.Записать наш новый обьект бургерс в state\r\n    this.setState({ burgers });\r\n  };\r\n  updateBurger = (key, updateBurger) => {\r\n    //1.Делаем копию объекта state\r\n    const burgers = { ...this.state.burgers };\r\n    //2.Обновляем нужный burger\r\n    burgers[key] = updateBurger;\r\n    //3.Записать наш новый обьект бургерс в state\r\n    this.setState({ burgers });\r\n  };\r\n  deleteBurger = (key) => {\r\n    //1.Делаем копию объекта state\r\n    const burgers = { ...this.state.burgers };\r\n    //2.Удаляем бургер\r\n    burgers[key] = null;\r\n    //3.Записать наш новый обьект бургерс в state\r\n    this.setState({ burgers });\r\n  };\r\n  loadSampleBurgers = () => {\r\n    this.setState({ burgers: sampleBurgers });\r\n  };\r\n  addToOrder = (key) => {\r\n    //1.Делаем копию объекта state\r\n    const order = { ...this.state.order };\r\n    //2.Добавить ключ к заказу со значением 1 либо обновить текущее значение\r\n    order[key] = order[key] + 1 || 1;\r\n    //3.Записать наш новый обьект order в state\r\n    this.setState({ order });\r\n  };\r\n  deleteFromOrder = (key) => {\r\n    //1.Делаем копию объекта state\r\n    const order = { ...this.state.order };\r\n    //2.Удаляем бургер\r\n    delete order[key];\r\n    //3.Записать наш новый обьект order в state\r\n    this.setState({ order });\r\n  };\r\n  handleLogout = async () => {\r\n    await firebase.auth().signOut();\r\n    window.location.reload();\r\n  };\r\n  render() {\r\n    return (\r\n      <SignIn>\r\n        <div className=\"burger-paradise\">\r\n          <div className=\"menu\">\r\n            <Header title=\"Very Hot Burger\" />\r\n            <ul className=\"burgers\">\r\n              {Object.keys(this.state.burgers).map((key) => {\r\n                return (\r\n                  <Burger\r\n                    key={key}\r\n                    index={key}\r\n                    addToOrder={this.addToOrder}\r\n                    details={this.state.burgers[key]}\r\n                  />\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n          <Order\r\n            burgers={this.state.burgers}\r\n            order={this.state.order}\r\n            deleteFromOrder={this.deleteFromOrder}\r\n          />\r\n          <MenuAdmin\r\n            addBurger={this.addBurger}\r\n            loadSampleBurgers={this.loadSampleBurgers}\r\n            burgers={this.state.burgers}\r\n            updateBurger={this.updateBurger}\r\n            deleteBurger={this.deleteBurger}\r\n            handleLogout={this.handleLogout}\r\n          />\r\n        </div>\r\n      </SignIn>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h2>The Page is Not Found</h2>\r\n    </div>\r\n  );\r\n};\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport Landing from './Landing'\r\nimport { Route } from \"react-router-dom\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Router = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path='/' component={Landing} />\r\n        <Route path='/restaurant/:restaurantId'component={App}/>\r\n        <Route component={NotFound}/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\nexport default Router;\r\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\";\nimport \"./css/style.css\";\n\nrender(\n    <Router />\n  ,document.querySelector('#root')\n);\n"],"sourceRoot":""}